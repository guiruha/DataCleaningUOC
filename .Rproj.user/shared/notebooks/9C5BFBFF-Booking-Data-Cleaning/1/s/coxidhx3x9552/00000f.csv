"0","# Función que encuentra el precio mínimo de la habitación dado un string con la información de las habitaciones"
"0","find_min_price <- function(text) {"
"0","  if (text==""{}""){"
"0","    return(NA)"
"0","  }"
"0","  a <- gregexpr(""([0-9]*', 'room_capacity)"", text)"
"0","  "
"0","  min_price <- NA"
"0","  for (value in a[[1]]){"
"0","    substring <- substr(text, value, value+20)"
"0","    price <- as.numeric(strsplit(substring, ""'"")[[1]][1])"
"0","    if (is.na(min_price)) {"
"0","      min_price <- price"
"0","    }"
"0","    "
"0","    if (price < min_price) {"
"0","      min_price <- price"
"0","    } "
"0","  }"
"0","  if (min_price == 0){"
"0","    return(NA)"
"0","  }"
"0","  else {"
"0","    return(min_price)"
"0","  }"
"0","}"
"0",""
"0","# Aplicamos la función a todos los valores"
"0","min_price_vector <- c()"
"0","for (i in seq(1, length(booking$room_data))) {"
"0","  min_price_vector <- append(min_price_vector, find_min_price(booking$room_data[i]))"
"0","}"
"0",""
"0","# Guardamos los resultados en una nueva columna."
"0","booking$min_price <- min_price_vector"
"0",""
"0","# Función que encuentra el precio máximo de la habitación dado un string con la información de las habitaciones"
"0","find_max_price <- function(text) {"
"0","  if (text==""{}""){"
"0","    return(NA)"
"0","  }"
"0","  a <- gregexpr(""([0-9]*', 'room_capacity)"", text)"
"0","  "
"0","  max_price <- NA"
"0","  for (value in a[[1]]){"
"0","    substring <- substr(text, value, value+20)"
"0","    price <- as.numeric(strsplit(substring, ""'"")[[1]][1])"
"0","    if (is.na(max_price)) {"
"0","      max_price <- price"
"0","    }"
"0","    "
"0","    if (price > max_price) {"
"0","      max_price <- price"
"0","    } "
"0","  }"
"0","  if (max_price == 0){"
"0","    return(NA)"
"0","  }"
"0","  else {"
"0","    return(max_price)"
"0","  }"
"0","}"
"0",""
"0","# Aplicamos la función a todos los valores"
"0","max_price_vector <- c()"
"0","for (i in seq(1, length(booking$room_data))) {"
"0","  max_price_vector <- append(max_price_vector, find_max_price(booking$room_data[i]))"
"0","}"
"0",""
"0","# Guardamos los resultados en una nueva columna."
"0","booking$max_price <- max_price_vector"
"0",""
"0","# Buscamos si hay una habitación en suite"
"0","is_suite_vector <- c()"
"0","for (i in seq(1, length(booking$room_data))) {"
"0","  is_suite <- gregexpr(""(suite)"", booking$room_data[i])[[1]][1]"
"0","  "
"0","  if (is_suite==-1) {"
"0","    is_suite_vector <- append(is_suite_vector, 0)"
"0","  } else {"
"0","    is_suite_vector <- append(is_suite_vector, 1)"
"0","  }"
"0","}"
"0",""
"0","# Guardamos los resultados en una nueva columna."
"0","booking$is_suite <- is_suite_vector"
"0",""
"0","# Buscamos si hay opción de apartamento"
"0","is_apartment_vector <- c()"
"0","for (i in seq(1, length(booking$room_data))) {"
"0","  is_apartment <- gregexpr(""(Apartment)"", booking$room_data[i])[[1]][1]"
"0","  "
"0","  if (is_apartment==-1) {"
"0","    is_apartment_vector <- append(is_apartment_vector, 0)"
"0","  } else {"
"0","    is_apartment_vector <- append(is_apartment_vector, 1)"
"0","  }"
"0","}"
"0",""
"0","# Guardamos los resultados en una nueva columna."
"0","booking$is_apartment <- is_apartment_vector"
"0",""
"0","# Buscamos si tiene cancelación gratuita"
"0","free_cancelation_vector <- c()"
"0","for (i in seq(1, length(booking$room_data))) {"
"0","  free_cancelation <- gregexpr(""(Free cancellation)"", booking$room_data[i])[[1]][1]"
"0","  "
"0","  if (free_cancelation==-1) {"
"0","    free_cancelation_vector <- append(free_cancelation_vector, 0)"
"0","  } else {"
"0","    free_cancelation_vector <- append(free_cancelation_vector, 1)"
"0","  }"
"0","}"
"0",""
"0","# Guardamos los resultados en una nueva columna."
"0","booking$has_free_cancelation <- free_cancelation_vector"
"0",""
